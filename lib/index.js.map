{"version":3,"file":"index.js","sources":["../node_modules/oker-limit/oker-queue.js","../node_modules/oker-limit/limit.js","../index.js"],"sourcesContent":["class OkerNode {\n\tvalue;\n\tnext;\n\n\tconstructor(value) {\n\t\tthis.value = value;\n\t}\n}\n\nexport class OkerQueue {\n\t_head;\n\t_tail;\n\t_size;\n\n\tconstructor() {\n\t\tthis.clear();\n\t}\n\n\tpush(value) {\n\t\tconst node = new OkerNode(value);\n\n\t\tif (this._head) {\n\t\t\tthis._tail.next = node;\n\t\t\tthis._tail = node;\n\t\t}\n        else {\n\t\t\tthis._head = node;\n\t\t\tthis._tail = node;\n\t\t}\n\n\t\tthis._size++;\n\t}\n\n\tpop() {\n\t\tconst current = this._head;\n\n\t\tif (!current) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis._head = this._head.next;\n\t\tthis._size--;\n\t\treturn current.value;\n\t}\n\n\tclear() {\n\t\tthis._head = undefined;\n\t\tthis._tail = undefined;\n\t\tthis._size = 0;\n\t}\n\n\tget size() {\n\t\treturn this._size;\n\t}\n\n\t* [Symbol.iterator]() {\n\t\tlet current = this._head;\n\n\t\twhile (current) {\n\t\t\tyield current.value;\n\t\t\tcurrent = current.next;\n\t\t}\n\t}\n}\n","import { OkerQueue } from './oker-queue';\n\nexport function OkerLimit (concurrency) {\n\tconst queue = new OkerQueue();\n\tlet activeCount = 0;\n\n\tconst next = () => {\n\t\tactiveCount--;\n\n\t\tif (queue.size > 0) {\n\t\t\tqueue.pop()();\n\t\t}\n\t};\n\n\tconst run = async (fn, resolve, args) => {\n\t\tactiveCount++;\n\n\t\tconst result = (async () => fn(...args))();\n\n\t\tresolve(result);\n\n\t\ttry {\n\t\t\tawait result;\n\t\t} catch {}\n\n\t\tnext();\n\t};\n\n\tconst enqueue = (fn, resolve, args) => {\n\t\tqueue.push(run.bind(undefined, fn, resolve, args));\n\n\t\t(async () => {\n\t\t\tawait Promise.resolve();\n\n\t\t\tif (activeCount < concurrency && queue.size > 0) {\n\t\t\t\tqueue.pop()();\n\t\t\t}\n\t\t})();\n\t};\n\n\tconst generator = (fn, ...args) => new Promise(resolve => {\n\t\tenqueue(fn, resolve, args);\n\t});\n\n\tObject.defineProperties(generator, {\n\t\tactiveCount: {\n\t\t\tget: () => activeCount,\n\t\t},\n\t\tpendingCount: {\n\t\t\tget: () => queue.size,\n\t\t},\n\t\tclearQueue: {\n\t\t\tvalue: () => {\n\t\t\t\tqueue.clear();\n\t\t\t}\n\t\t},\n\t});\n\n\treturn generator;\n}\n","/**\n * @file iodb库\n * @date 2022-07-25\n * @author Perfumere\n */\n\nimport { OkerLimit } from 'oker-limit';\n\nconst { toString, hasOwnProperty } = Object.prototype;\n\nfunction _type(target, typ) {\n    return toString.call(target).toLowerCase() === `[object ${typ}]`;\n}\n\nfunction _odiType(target) {\n    return ['string', 'number', 'boolean', 'undefined'].includes(typeof target) || _type(target, 'null');\n}\n\nfunction _hasProp(target, key) {\n    return hasOwnProperty.call(target, key);\n}\n\nfunction _eq(target, other, loosen = false) {\n    if (loosen) {\n        _type(target, 'array') && target.sort();\n        _type(other, 'array') && other.sort();\n    }\n\n    return JSON.stringify(target) === JSON.stringify(other);\n}\n\nfunction _clone(target) {\n    try { return JSON.parse(JSON.stringify(target)); } catch (err) { return {}; }\n}\n\n/**\n * unwrap promise\n */\nfunction _signal() {\n    let resolve, reject;\n    const promise = new Promise((r, e) => (resolve = r, reject = e));\n\n    return { resolve, reject, promise };\n}\n\nlet fixedIOSbug = false;\nconst dbPool = {};\n\n/**\n * 获取indexedDB链接实例\n * @param opts.name 数据库名\n * @param opts.version 版本\n * @returns IDBDatabase\n */\nexport function connect(opts = { version: 1 }) {\n    const { name, tables, version = 1 } = opts;\n\n    if (!fixedIOSbug) {\n        /**\n         * [fix webkit bug](https://bugs.webkit.org/show_bug.cgi?id=226547)\n         */\n        indexedDB.open('__test', 1);\n        fixedIOSbug = true;\n    }\n\n    if (!dbPool[name] || !dbPool[name].promise) {\n        const signalCtrl = _signal();\n        const limit = OkerLimit(15);\n        const promise = signalCtrl.promise;\n        const idbReq = indexedDB.open(name, version);\n\n        dbPool[name] = { db: undefined, tables, reqQueue: [], promise };\n        promise.getCollection = (tname) => collection(name, tname);\n        promise.close = () => close(name);\n\n        idbReq.onupgradeneeded = () => _createTables(idbReq.result, tables);\n        idbReq.onsuccess = () => {\n            dbPool[name].db = idbReq.result;\n\n            // process cached request\n            for (const request of dbPool[name].reqQueue) {\n                try { limit(request); }\n                catch (err) { /* None */ }\n            }\n\n            dbPool[name].reqQueue = null;\n            signalCtrl.resolve({\n                getCollection: promise.getCollection,\n                close: () => promise.close\n            });\n        };\n        idbReq.onerror = () => signalCtrl.reject(idbReq.error);\n    }\n\n    return dbPool[name].promise;\n}\n\n/**\n * 获取指定表\n */\nfunction collection(name, tname) {\n    const signalCtrl = _signal();\n    const promise = signalCtrl.promise;\n    const { primary = '_id', unique = [], index = [] } = dbPool[name].tables[tname] || {};\n    const handlers = {\n        /** Props */\n        database: { value: name, configurable: false },\n        collection: { value: tname, configurable: false },\n        indexes: { value: { primary, unique, index }, configurable: false },\n        /** Methods */\n        findById: { value: findById, configurable: false },\n        findOne: { value: findOne, configurable: false },\n        find: { value: find, configurable: false },\n        deleteOne: { value: deleteOne, configurable: false },\n        deleteMany: { value: deleteMany, configurable: false },\n        updateOne: { value: insert, configurable: false },\n        updateMany: { value: insert, configurable: false }\n    };\n\n    Object.defineProperties(promise, handlers);\n\n    dbPool[name].promise.then(\n        () => signalCtrl.resolve(Object.defineProperties({ __proto__: null }, handlers))\n    );\n\n    return promise;\n}\n\n/**\n * 关闭指定数据库\n */\nfunction close(name) {\n    dbPool[name].promise.then(() => {\n        dbPool[name].db.close();\n        dbPool[name].reqQueue = null;\n        dbPool[name].db = undefined;\n\n        delete dbPool[name];\n    });\n}\n\n/**\n * 新增一条记录\n * @param tname 表名\n * @param data 数据\n */\nfunction insert(data, cloned = false) {\n    const { primary = '_id' } = this.indexes;\n    return _insert(this.database, this.collection, primary, cloned, data);\n}\n\nfunction findById(_id) {\n    const { resolve, reject, promise } = _signal();\n\n    const request = () => {\n        const req = _getStore(this.database, this.collection).store.get(_id);\n        req.onsuccess = () => resolve(req.result || null);\n        req.onerror = () => reject(req.error);\n    };\n\n    _addTask(this.database, request);\n\n    return promise;\n}\n\nfunction findOne(search) {\n    return _find.call(this, search, false);\n}\n\nfunction find(search) {\n    return _find.call(this, search, true);\n}\n\nfunction deleteOne(search) {\n    return _delete.call(this, search, false);\n}\n\nfunction deleteMany(search) {\n    return _delete.call(this, search, true);\n}\n\nfunction _delete(search, removeMany) {\n    const { promise, resolve, reject } = _signal();\n\n    const request = async () => {\n        if (removeMany && (search === undefined || search === null)) {\n            const { store, transaction } = _getStore(this.database, this.collection, 'readwrite');\n            const countReq = store.count();\n    \n            countReq.onsuccess = event => {\n                const count = event.target.result || 0;\n                const request = store.clear();\n    \n                request.onsuccess = () => {\n                    resolve(new RemoveResult(count));\n                }\n            }\n    \n            await transaction.complete;\n            return;\n        }\n\n        let matched = await _find.call(this, search, removeMany);\n\n        if (!matched) {\n            resolve(new RemoveResult(0));\n        }\n        else {\n            matched = (Array.isArray(matched) ? matched : [matched]);\n\n            try {\n                const { store, transaction } = _getStore(this.database, this.collection, 'readwrite');\n\n                for (const item of matched) {\n                    await store.delete(item._id);\n                }\n\n                await transaction.complete;\n\n                resolve(new RemoveResult(matched.length));\n            }\n            catch (err) { reject(err); }\n        }\n    };\n\n    _addTask(this.database, request);\n\n    return promise;\n}\n\n/**\n * 建表\n */\nfunction _createTables(idb, tables) {\n    for (const tname in tables) {\n        const indexes = tables[tname] || { primary: '_id' };\n\n        if (!idb.objectStoreNames.contains(tname)) {\n            const tableIns = idb.createObjectStore(tname, { keyPath: indexes.primary });\n\n            if (indexes.unique) {\n                for (const uniqueKey of indexes.unique) {\n                    tableIns.createIndex(uniqueKey, uniqueKey, { unique: true });\n                }\n            }\n            if (indexes.index) {\n                for (const indexKey of indexes.index) {\n                    tableIns.createIndex(indexKey, indexKey, { unique: false });\n                }\n            }\n        }\n    }\n}\n\nfunction _getStore(name, tname, permission) {\n    const transaction = dbPool[name].db.transaction(tname, permission);\n\n    return {\n        store: transaction.objectStore(tname),\n        transaction\n    };\n}\n\nfunction _getStoreCursor(name, tname, range) {\n    const transaction = dbPool[name].db.transaction(tname);\n    return transaction.objectStore(tname).openCursor(range, 'prev');\n}\n\nfunction _getIdxCursor(name, tname, iname, range) {\n    const transaction = dbPool[name].db.transaction(tname);\n    return transaction.objectStore(tname).index(iname).openCursor(range, 'prev');\n}\n\nfunction _cursorRange(filter) {\n    let lowerOpen = true, upperOpen = true;\n    let lower, upper;\n\n    if (_type(filter, 'object')) {\n        let range;\n\n        filter.$lte !== undefined && (upper = filter.$lte, upperOpen = false);\n        filter.$gte !== undefined && (lower = filter.$gte, lowerOpen = false);\n        upper === undefined && filter.$lt !== undefined && (upper = filter.$lt);\n        lower === undefined && filter.$gt !== undefined && (lower = filter.$gt);\n\n        if (lower !== undefined && upper === undefined) {\n            range = IDBKeyRange.lowerBound(lower, lowerOpen);\n        }\n        else if (upper !== undefined && lower === undefined) {\n            range = IDBKeyRange.upperBound(upper, upperOpen);\n        }\n        else if (lower !== undefined && upper !== undefined) {\n            range = IDBKeyRange.bound(lower, upper, lowerOpen, upperOpen);\n        }\n\n        delete filter.$lte;\n        delete filter.$gte;\n        delete filter.$lt;\n        delete filter.$gt;\n\n        return range;\n    }\n}\n\nfunction _addTask(name, functor) {\n    if (dbPool[name].db) {\n        functor();\n    }\n    else {\n        dbPool[name].reqQueue.push(functor);\n    }\n}\n\nfunction _find(search, pickMany) {\n    const filters = _clone(search);\n    const filterKey = Object.keys(filters);\n    const { resolve, reject, promise } = _signal();\n\n    const request = () => {\n        const result = [];\n        const query = _getRangeQuery(filterKey, filters);\n        const cursor = _getCursor(this.database, this.collection, this.indexes, query);\n\n        cursor.onerror = reject;\n        cursor.onsuccess = () => {\n            const next = cursor.result;\n\n            if (next) {\n                result.push(next.value);\n\n                if (pickMany) {\n                    next.continue();\n                }\n                else {\n                    const matched = _filter(result, filterKey, filters, pickMany);\n\n                    if (!matched) {\n                        return next.continue();\n                    }\n\n                    resolve(matched);\n                }\n            }\n            else {\n                if (pickMany) {\n                    resolve(_filter(result, filterKey, filters, pickMany));\n                }\n                else {\n                    resolve(null);\n                }\n            }\n        };\n    };\n\n    _addTask(this.database, request);\n\n    return promise;\n}\n\nfunction _insert(name, tname, primary, cloned, data) {\n    const { resolve, reject, promise } = _signal();\n\n    const request = async () => {\n        const { store, transaction } = _getStore(name, tname, 'readwrite');\n        let nInserted = 0;\n\n        try {\n            if (_type(data, 'array')) {\n                const keys = [];\n\n                for (let i = data.length - 1; i >= 0; --i) {\n                    const item = data[i];\n\n                    if (item && !keys.includes(item[primary])) {\n                        if (_type(item.value, 'arraybuffer')) {\n                            await store.put(item.value, item[primary]);\n                        }\n                        else {\n                            await store.put(cloned ? _clone(item) : item, store.keyPath ? undefined : item[primary]);\n                        }\n\n                        keys.push(item[primary]);\n                        nInserted += 1;\n                    }\n                }\n            }\n            else if (_type(data, 'object')) {\n                if (_type(data.value, 'arraybuffer')) {\n                    await store.put(data.value, data[primary]);\n                }\n                else {\n                    await store.put(cloned ? _clone(data) : data, store.keyPath ? undefined : data[primary]);\n                }\n\n                nInserted += 1;\n            }\n\n            await transaction.complete;\n\n            resolve(new WriteResult(nInserted));\n        }\n        catch (err) { reject(err); }\n    };\n\n    _addTask(name, request);\n\n    return promise;\n}\n\nfunction _getCursor(name, tname, indexes, query) {\n    const { key, range } = query;\n    const { unique, index } = indexes;\n\n    if (range && (unique.includes(key) || index.includes(key))) {\n        return _getIdxCursor(name, tname, key, range);\n    }\n    else {\n        return _getStoreCursor(name, tname, range);\n    }\n}\n\nfunction _getRangeQuery(keys, filters) {\n    const query = {};\n\n    for (const key of keys) {\n        if (!key.includes('.')) {\n            const range = _cursorRange(filters[key]);\n\n            if (range) {\n                query.key = key;\n                query.range = range;\n\n                break;\n            }\n        }\n    }\n\n    return query;\n}\n\nfunction _filter(list, keys, search, pickMany) {\n    const result = [];\n\n    for (const item of list) {\n        let matched = true;\n\n        for (const key of keys) {\n            const filter = search[key];\n            const field = _getField(item, key);\n\n            if (!_passPipe(field, filter)) {\n                matched = false;\n\n                break;\n            }\n        }\n\n        if (matched) {\n            result.push(item);\n        }\n    }\n\n    if (!pickMany) {\n        return result[0] || null;\n    }\n\n    return result;\n}\n\nfunction _passPipe(field, filter) {\n    let matched = Array.isArray(field) ? field : [field];\n\n    if (_type(field, 'array') && _type(filter, 'array')) {\n        return _eq(field, filter, true);\n    }\n\n    if (_odiType(filter)) {\n        matched = matched.filter(item => item === filter);\n    }\n    else if (_type(filter, 'regexp')) {\n        matched = matched.filter(item => filter.test(item));\n    }\n    else if (_hasProp(filter, '$eq')) {\n        matched = matched.filter(item => _eq(item, filter.$eq));\n    }\n    else if (_hasProp(filter, '$ne')) {\n        matched = matched.filter(item => !_eq(item, filter.$ne));\n    }\n    else if (_type(filter.$all, 'array')) {\n        matched = matched.filter(item => _eq(item, filter.$all, true));\n    }\n    else if (_type(filter.$in, 'array')) {\n        matched = matched.filter(item => filter.$in.includes(item));\n    }\n    else if (_type(filter.$nin, 'array')) {\n        matched = matched.filter(item => !filter.$nin.includes(item));\n    }\n\n    if (filter.$lte !== undefined) {\n        matched = matched.filter(item => item <= filter.$lte);\n    }\n    else if (filter.$lt !== undefined) {\n        matched = matched.filter(item => item < filter.$lt);\n    }\n\n    if (filter.$gte !== undefined) {\n        matched = matched.filter(item => item >= filter.$gte);\n    }\n    else if (filter.$gt !== undefined) {\n        matched = matched.filter(item => item > filter.$gt);\n    }\n\n    if (matched.length && _type(filter.$or, 'array')) {\n        const tempRes = new Set();\n\n        for (const subFilter of filter.$or) {\n            for (const subItem of matched) {\n                _passPipe(subItem, subFilter) && tempRes.add(subItem);\n            }\n        }\n\n        matched = [...tempRes];\n    }\n\n    return !!matched.length;\n}\n\nfunction _getField(target, path) {\n    if (target[path]) {\n        return target[path];\n    }\n\n    let result = target;\n    const paths = path.split('.');\n\n    try {\n        for (const subpath of paths) {\n            if (_type(result, 'array')) {\n                if (Number.isInteger(+subpath)) {\n                    result = result[subpath];\n                }\n                else {\n                    const match = result.filter(item => _hasProp(item, subpath)).map(item => item[subpath]);\n                    result = match.length ? match : undefined;\n                }\n            }\n            else if (_type(result, 'object')) {\n                result = result[subpath];\n            }\n            else {\n                return undefined;\n            }\n        }\n\n        return result;\n    }\n    catch (err) {/* None */ }\n}\n\nfunction WriteResult(num) {\n    this.__proto__ = null;\n    this.nInserted = num;\n}\n\nfunction RemoveResult(num) {\n    this.__proto__ = null;\n    this.nRemoved = num;\n}\n"],"names":["OkerNode","value","next","constructor","this","OkerQueue","_head","_tail","_size","clear","push","node","pop","current","undefined","size","Symbol","iterator","OkerLimit","concurrency","queue","activeCount","run","async","fn","resolve","args","result","generator","Promise","bind","enqueue","Object","defineProperties","get","pendingCount","clearQueue","toString","hasOwnProperty","prototype","_type","target","typ","call","toLowerCase","_hasProp","key","_eq","other","loosen","sort","JSON","stringify","_clone","parse","err","_signal","reject","promise","r","e","fixedIOSbug","dbPool","insert","data","cloned","primary","indexes","name","tname","_addTask","store","transaction","_getStore","nInserted","keys","i","length","item","includes","put","keyPath","complete","WriteResult","_insert","database","collection","findById","_id","req","onsuccess","onerror","error","findOne","search","_find","find","deleteOne","_delete","deleteMany","removeMany","count","event","RemoveResult","matched","Array","isArray","delete","permission","db","objectStore","_cursorRange","filter","lower","upper","lowerOpen","upperOpen","range","$lte","$gte","$lt","$gt","IDBKeyRange","lowerBound","upperBound","bound","functor","reqQueue","pickMany","filters","filterKey","query","_getRangeQuery","cursor","unique","index","iname","openCursor","_getIdxCursor","_getStoreCursor","_getCursor","continue","_filter","list","_passPipe","_getField","field","test","$eq","$ne","$all","$in","$nin","$or","tempRes","Set","subFilter","subItem","add","path","paths","split","subpath","Number","isInteger","match","map","num","__proto__","nRemoved","opts","version","tables","indexedDB","open","signalCtrl","limit","idbReq","getCollection","handlers","configurable","updateOne","updateMany","then","close","onupgradeneeded","idb","objectStoreNames","contains","tableIns","createObjectStore","uniqueKey","createIndex","indexKey","_createTables","request"],"mappings":"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"}