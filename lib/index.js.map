{"version":3,"file":"index.js","sources":["../node_modules/oker-limit/oker-queue.js","../node_modules/oker-limit/limit.js","../index.js"],"sourcesContent":["class OkerNode {\n\tvalue;\n\tnext;\n\n\tconstructor(value) {\n\t\tthis.value = value;\n\t}\n}\n\nexport class OkerQueue {\n\t_head;\n\t_tail;\n\t_size;\n\n\tconstructor() {\n\t\tthis.clear();\n\t}\n\n\tpush(value) {\n\t\tconst node = new OkerNode(value);\n\n\t\tif (this._head) {\n\t\t\tthis._tail.next = node;\n\t\t\tthis._tail = node;\n\t\t}\n        else {\n\t\t\tthis._head = node;\n\t\t\tthis._tail = node;\n\t\t}\n\n\t\tthis._size++;\n\t}\n\n\tpop() {\n\t\tconst current = this._head;\n\n\t\tif (!current) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis._head = this._head.next;\n\t\tthis._size--;\n\t\treturn current.value;\n\t}\n\n\tclear() {\n\t\tthis._head = undefined;\n\t\tthis._tail = undefined;\n\t\tthis._size = 0;\n\t}\n\n\tget size() {\n\t\treturn this._size;\n\t}\n\n\t* [Symbol.iterator]() {\n\t\tlet current = this._head;\n\n\t\twhile (current) {\n\t\t\tyield current.value;\n\t\t\tcurrent = current.next;\n\t\t}\n\t}\n}\n","import { OkerQueue } from './oker-queue';\n\nexport function OkerLimit (concurrency) {\n\tconst queue = new OkerQueue();\n\tlet activeCount = 0;\n\n\tconst next = () => {\n\t\tactiveCount--;\n\n\t\tif (queue.size > 0) {\n\t\t\tqueue.pop()();\n\t\t}\n\t};\n\n\tconst run = async (fn, resolve, args) => {\n\t\tactiveCount++;\n\n\t\tconst result = (async () => fn(...args))();\n\n\t\tresolve(result);\n\n\t\ttry {\n\t\t\tawait result;\n\t\t} catch {}\n\n\t\tnext();\n\t};\n\n\tconst enqueue = (fn, resolve, args) => {\n\t\tqueue.push(run.bind(undefined, fn, resolve, args));\n\n\t\t(async () => {\n\t\t\tawait Promise.resolve();\n\n\t\t\tif (activeCount < concurrency && queue.size > 0) {\n\t\t\t\tqueue.pop()();\n\t\t\t}\n\t\t})();\n\t};\n\n\tconst generator = (fn, ...args) => new Promise(resolve => {\n\t\tenqueue(fn, resolve, args);\n\t});\n\n\tObject.defineProperties(generator, {\n\t\tactiveCount: {\n\t\t\tget: () => activeCount,\n\t\t},\n\t\tpendingCount: {\n\t\t\tget: () => queue.size,\n\t\t},\n\t\tclearQueue: {\n\t\t\tvalue: () => {\n\t\t\t\tqueue.clear();\n\t\t\t}\n\t\t},\n\t});\n\n\treturn generator;\n}\n","/**\n * @file iodb库\n * @date 2022-07-25\n * @author Perfumere\n */\n\nimport { OkerLimit } from 'oker-limit';\n\nconst { toString, hasOwnProperty } = Object.prototype;\n\nfunction _type(target, typ) {\n    return toString.call(target).toLowerCase() === `[object ${typ}]`;\n}\n\nfunction _odiType(target) {\n    return ['string', 'number', 'boolean', 'undefined'].includes(typeof target) || _type(target, 'null');\n}\n\nfunction _hasProp(target, key) {\n    return hasOwnProperty.call(target, key);\n}\n\nfunction _eq(target, other, loosen = false) {\n    if (loosen) {\n        _type(target, 'array') && target.sort();\n        _type(other, 'array') && other.sort();\n    }\n\n    return JSON.stringify(target) === JSON.stringify(other);\n}\n\nfunction _clone(target) {\n    try { return JSON.parse(JSON.stringify(target)); } catch (err) { return {}; }\n}\n\n/**\n * unwrap promise\n */\nfunction _signal() {\n    let resolve, reject;\n    const promise = new Promise((r, e) => (resolve = r, reject = e));\n\n    return { resolve, reject, promise };\n}\n\nlet fixedIOSbug = false;\nconst dbPool = {};\n\n/**\n * 获取indexedDB链接实例\n * @param opts.name 数据库名\n * @param opts.version 版本\n * @returns IDBDatabase\n */\nexport function connect(opts = { version: 1 }) {\n    const { name, tables, version = 1 } = opts;\n\n    if (!fixedIOSbug) {\n        /**\n         * [fix webkit bug](https://bugs.webkit.org/show_bug.cgi?id=226547)\n         */\n        indexedDB.open('__test', 1);\n        fixedIOSbug = true;\n    }\n\n    if (!dbPool[name] || !dbPool[name].promise) {\n        const signalCtrl = _signal();\n        const limit = OkerLimit(15);\n        const promise = signalCtrl.promise;\n        const idbReq = indexedDB.open(name, version);\n\n        dbPool[name] = { db: undefined, tables, reqQueue: [], promise };\n        promise.getCollection = (tname) => collection(name, tname);\n        promise.close = () => close(name);\n\n        idbReq.onupgradeneeded = () => _createTables(idbReq.result, tables);\n        idbReq.onsuccess = () => {\n            dbPool[name].db = idbReq.result;\n\n            // process cached request\n            for (const request of dbPool[name].reqQueue) {\n                try { limit(request); }\n                catch (err) { /* None */ }\n            }\n\n            dbPool[name].reqQueue = null;\n            signalCtrl.resolve({\n                getCollection: promise.getCollection,\n                close: () => promise.close\n            });\n        };\n        idbReq.onerror = () => signalCtrl.reject(idbReq.error);\n    }\n\n    return dbPool[name].promise;\n}\n\n/**\n * 获取指定表\n */\nfunction collection(name, tname) {\n    const signalCtrl = _signal();\n    const promise = signalCtrl.promise;\n    const { primary = '_id', unique = [], index = [] } = dbPool[name].tables[tname] || {};\n    const handlers = {\n        /** Props */\n        database: { value: name, configurable: false },\n        collection: { value: tname, configurable: false },\n        indexes: { value: { primary, unique, index }, configurable: false },\n        /** Methods */\n        findById: { value: findById, configurable: false },\n        findOne: { value: findOne, configurable: false },\n        find: { value: find, configurable: false },\n        deleteOne: { value: deleteOne, configurable: false },\n        deleteMany: { value: deleteMany, configurable: false },\n        updateOne: { value: insert, configurable: false },\n        updateMany: { value: insert, configurable: false }\n    };\n\n    Object.defineProperties(promise, handlers);\n\n    dbPool[name].promise.then(\n        () => signalCtrl.resolve(Object.defineProperties({ __proto__: null }, handlers))\n    );\n\n    return promise;\n}\n\n/**\n * 关闭指定数据库\n */\nfunction close(name) {\n    dbPool[name].promise.then(() => {\n        dbPool[name].db.close();\n        dbPool[name].reqQueue = null;\n        dbPool[name].db = undefined;\n\n        delete dbPool[name];\n    });\n}\n\n/**\n * 新增一条记录\n * @param tname 表名\n * @param data 数据\n */\nfunction insert(data) {\n    return _insert(this.database, this.collection, data);\n}\n\nfunction findById(_id) {\n    const { resolve, reject, promise } = _signal();\n\n    const request = () => {\n        const req = _getStore(this.database, this.collection).store.get(_id);\n        req.onsuccess = () => resolve(req.result || null);\n        req.onerror = () => reject(req.error);\n    };\n\n    _addTask(this.database, request);\n\n    return promise;\n}\n\nfunction findOne(search) {\n    return _find.call(this, search, false);\n}\n\nfunction find(search, opts) {\n    return _find.call(this, search, opts, true);\n}\n\nfunction deleteOne(search) {\n    return _delete.call(this, search, false);\n}\n\nfunction deleteMany(search) {\n    return _delete.call(this, search, true);\n}\n\nfunction _delete(search, removeMany) {\n    const { promise, resolve, reject } = _signal();\n\n    const request = async () => {\n        let matched = await _find.call(this, search, removeMany);\n\n        if (!matched) {\n            resolve(new RemoveResult(0));\n        }\n        else {\n            matched = (Array.isArray(matched) ? matched : [matched]);\n\n            try {\n                const { store, transaction } = _getStore(this.database, this.collection, 'readwrite');\n\n                for (const item of matched) {\n                    await store.delete(item._id);\n                }\n\n                await transaction.complete;\n\n                resolve(new RemoveResult(matched.length));\n            }\n            catch (err) { reject(err); }\n        }\n    };\n\n    _addTask(this.database, request);\n\n    return promise;\n}\n\n/**\n * 建表\n */\nfunction _createTables(idb, tables) {\n    for (const tname in tables) {\n        const indexes = tables[tname] || { primary: '_id' };\n\n        if (!idb.objectStoreNames.contains(tname)) {\n            const tableIns = idb.createObjectStore(tname, { keyPath: indexes.primary });\n\n            if (indexes.unique) {\n                for (const uniqueKey of indexes.unique) {\n                    tableIns.createIndex(uniqueKey, uniqueKey, { unique: true });\n                }\n            }\n            if (indexes.index) {\n                for (const indexKey of indexes.unique) {\n                    tableIns.createIndex(indexKey, indexKey, { unique: false });\n                }\n            }\n        }\n    }\n}\n\nfunction _getStore(name, tname, permission) {\n    const transaction = dbPool[name].db.transaction(tname, permission);\n\n    return {\n        store: transaction.objectStore(tname),\n        transaction\n    };\n}\n\nfunction _getStoreCursor(name, tname, range) {\n    const transaction = dbPool[name].db.transaction(tname);\n    return transaction.objectStore(tname).openCursor(range, 'prev');\n}\n\nfunction _getIdxCursor(name, tname, iname, range) {\n    const transaction = dbPool[name].db.transaction(tname);\n    return transaction.objectStore(tname).index(iname).openCursor(range, 'prev');\n}\n\nfunction _cursorRange(filter) {\n    let lowerOpen = true, upperOpen = true;\n    let lower, upper;\n\n    if (_type(filter, 'object')) {\n        let range;\n\n        filter.$lte !== undefined && (upper = filter.$lte, upperOpen = false);\n        filter.$gte !== undefined && (lower = filter.$gte, lowerOpen = false);\n        upper === undefined && filter.$lt !== undefined && (upper = filter.$lt);\n        lower === undefined && filter.$gt !== undefined && (lower = filter.$gt);\n\n        if (lower !== undefined && upper === undefined) {\n            range = IDBKeyRange.lowerBound(lower, lowerOpen);\n        }\n        else if (upper !== undefined && lower === undefined) {\n            range = IDBKeyRange.upperBound(upper, upperOpen);\n        }\n        else if (lower !== undefined && upper !== undefined) {\n            range = IDBKeyRange.bound(lower, upper, lowerOpen, upperOpen);\n        }\n\n        delete filter.$lte;\n        delete filter.$gte;\n        delete filter.$lt;\n        delete filter.$gt;\n\n        return range;\n    }\n}\n\nfunction _addTask(name, functor) {\n    if (dbPool[name].db) {\n        functor();\n    }\n    else {\n        dbPool[name].reqQueue.push(functor);\n    }\n}\n\nfunction _find(search, opts, pickMany) {\n    const filters = _clone(search);\n    const filterKey = Object.keys(filters);\n\n    if (\n        filterKey.length === 1 && filterKey[0] === this.indexes.primary &&\n        (_type(filters[filterKey[0]], 'string') || _type(filters[filterKey[0]], 'number'))\n    ) {\n        return findById.call(this, filters[filterKey[0]]);\n    }\n\n    const { resolve, reject, promise } = _signal();\n\n    const request = () => {\n        const result = [];\n        const query = _getRangeQuery(filterKey, filters);\n        const cursor = _getCursor(this.database, this.collection, this.indexes, query);\n\n        cursor.onerror = reject;\n        cursor.onsuccess = () => {\n            const next = cursor.result;\n\n            if (next) {\n                result.push(next.value);\n\n                if (pickMany) {\n                    next.continue();\n                }\n                else {\n                    const matched = _filter(result, filterKey, filters, opts, pickMany);\n\n                    if (!matched) {\n                        return next.continue();\n                    }\n\n                    resolve(matched);\n                }\n            }\n            else {\n                resolve(_filter(result, filterKey, filters, opts, pickMany));\n            }\n        };\n    };\n\n    _addTask(this.database, request);\n\n    return promise;\n}\n\nfunction _insert(name, tname, data) {\n    const { resolve, reject, promise } = _signal();\n\n    const request = async () => {\n        const { store, transaction } = _getStore(name, tname, 'readwrite');\n        let nInserted = 0;\n\n        try {\n            if (_type(data, 'object')) {\n                nInserted += 1;\n                await store.put(data);\n            }\n            if (_type(data, 'array')) {\n                for (const item of data) {\n                    nInserted += 1;\n                    await store.put(item);\n                }\n            }\n\n            await transaction.complete;\n\n            resolve(new WriteResult(nInserted));\n        }\n        catch (err) { reject(err); }\n    };\n\n    _addTask(name, request);\n\n    return promise;\n}\n\nfunction _getCursor(name, tname, indexes, query) {\n    const { key, range } = query;\n    const { unique, index } = indexes;\n\n    if (range && (unique.includes(key) || index.includes(key))) {\n        return _getIdxCursor(name, tname, key, range);\n    }\n    else {\n        return _getStoreCursor(name, tname, range);\n    }\n}\n\nfunction _getRangeQuery(keys, filters) {\n    const query = {};\n\n    for (const key of keys) {\n        if (!key.includes('.')) {\n            const range = _cursorRange(filters[key]);\n\n            if (range) {\n                query.key = key;\n                query.range = range;\n\n                break;\n            }\n        }\n    }\n\n    return query;\n}\n\nfunction _filter(list, keys, search, opts, pickMany) {\n    const result = [];\n\n    for (const item of list) {\n        let matched = true;\n\n        for (const key of keys) {\n            const filter = search[key];\n            const field = _getField(item, key);\n\n            if (!_passPipe(field, filter)) {\n                matched = false;\n\n                break;\n            }\n        }\n\n        if (matched) {\n            result.push(item);\n        }\n    }\n\n    if (!pickMany) {\n        return result[0] || null;\n    }\n\n    return result.length ? result : null;\n}\n\nfunction _passPipe(field, filter) {\n    let matched = Array.isArray(field) ? field : [field];\n\n    if (_type(field, 'array') && _type(filter, 'array')) {\n        return _eq(field, filter, true);\n    }\n\n    if (_odiType(filter)) {\n        matched = matched.filter(item => item === filter);\n    }\n    else if (_type(filter, 'regexp')) {\n        matched = matched.filter(item => filter.test(item));\n    }\n    else if (_hasProp(filter, '$eq')) {\n        matched = matched.filter(item => _eq(item, filter.$eq));\n    }\n    else if (_hasProp(filter, '$ne')) {\n        matched = matched.filter(item => !_eq(item, filter.$ne));\n    }\n    else if (_type(filter.$all, 'array')) {\n        matched = matched.filter(item => _eq(item, filter.$all, true));\n    }\n    else if (_type(filter.$in, 'array')) {\n        matched = matched.filter(item => filter.$in.includes(item));\n    }\n    else if (_type(filter.$nin, 'array')) {\n        matched = matched.filter(item => !filter.$nin.includes(item));\n    }\n\n    if (filter.$lte !== undefined) {\n        matched = matched.filter(item => item <= filter.$lte);\n    }\n    else if (filter.$lt !== undefined) {\n        matched = matched.filter(item => item < filter.$lt);\n    }\n\n    if (filter.$gte !== undefined) {\n        matched = matched.filter(item => item >= filter.$gte);\n    }\n    else if (filter.$gt !== undefined) {\n        matched = matched.filter(item => item > filter.$gt);\n    }\n\n    if (matched.length && _type(filter.$or, 'array')) {\n        const tempRes = new Set();\n\n        for (const subFilter of filter.$or) {\n            for (const subItem of matched) {\n                _passPipe(subItem, subFilter) && tempRes.add(subItem);\n            }\n        }\n\n        matched = [...tempRes];\n    }\n\n    return !!matched.length;\n}\n\nfunction _getField(target, path) {\n    if (target[path]) {\n        return target[path];\n    }\n\n    let result = target;\n    const paths = path.split('.');\n\n    try {\n        for (const subpath of paths) {\n            if (_type(result, 'array')) {\n                if (Number.isInteger(+subpath)) {\n                    result = result[subpath];\n                }\n                else {\n                    const match = result.filter(item => _hasProp(item, subpath)).map(item => item[subpath]);\n                    result = match.length ? match : undefined;\n                }\n            }\n            else if (_type(result, 'object')) {\n                result = result[subpath];\n            }\n            else {\n                return undefined;\n            }\n        }\n\n        return result;\n    }\n    catch (err) {/* None */ }\n}\n\nfunction WriteResult(num) {\n    this.__proto__ = null;\n    this.nInserted = num;\n}\n\nfunction RemoveResult(num) {\n    this.__proto__ = null;\n    this.nRemoved = num;\n}\n"],"names":["OkerNode","value","next","constructor","this","OkerQueue","_head","_tail","_size","clear","push","node","pop","current","undefined","size","Symbol","iterator","OkerLimit","concurrency","queue","activeCount","run","async","fn","resolve","args","result","generator","Promise","bind","enqueue","Object","defineProperties","get","pendingCount","clearQueue","toString","hasOwnProperty","prototype","_type","target","typ","call","toLowerCase","_hasProp","key","_eq","other","loosen","sort","JSON","stringify","_signal","reject","promise","r","e","fixedIOSbug","dbPool","insert","data","name","tname","_addTask","store","transaction","_getStore","nInserted","put","item","complete","WriteResult","err","_insert","database","collection","findById","_id","req","onsuccess","onerror","error","findOne","search","_find","find","opts","deleteOne","_delete","deleteMany","removeMany","matched","Array","isArray","delete","RemoveResult","length","permission","db","objectStore","_cursorRange","filter","lower","upper","lowerOpen","upperOpen","range","$lte","$gte","$lt","$gt","IDBKeyRange","lowerBound","upperBound","bound","functor","reqQueue","pickMany","filters","parse","_clone","filterKey","keys","indexes","primary","query","includes","_getRangeQuery","cursor","unique","index","iname","openCursor","_getIdxCursor","_getStoreCursor","_getCursor","continue","_filter","list","_passPipe","_getField","field","test","$eq","$ne","$all","$in","$nin","$or","tempRes","Set","subFilter","subItem","add","path","paths","split","subpath","Number","isInteger","match","map","num","__proto__","nRemoved","version","tables","indexedDB","open","signalCtrl","limit","idbReq","getCollection","handlers","configurable","updateOne","updateMany","then","close","onupgradeneeded","idb","objectStoreNames","contains","tableIns","createObjectStore","keyPath","uniqueKey","createIndex","indexKey","_createTables","request"],"mappings":"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"}